@model WebArtSampler.Models.SampCutReqMaster

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script type="text/javascript">

    $(document).ready(function () {

        $('.sizecolmn').change(function () {

            var newsize = "";
            $('.sizecolmn').each(function () {


                if ($(this).val() != "")
                {
                    newsize +=  $(this).val()+"/" ;
                }
              


            });
            $('#SizeDetail').val(newsize);
            
            
        });
        
        $('.Qtycolmn').change(function () {

            var newsize = 0;
            $('.Qtycolmn').each(function () {


                if ($(this).val() != "" ) {
                    newsize += parseFloat( $(this).val()) ;
                }



            });
            $('#Qty').val(newsize);
        });

    });
    </script>
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SampCutReqMaster</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ReqNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReqNum, new { htmlAttributes = new { @class = "form-control",@Value = ViewBag.DefaultDescription } })
                @Html.ValidationMessageFor(model => model.ReqNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fabric, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Fabric, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("Fabric", null, htmlAttributes: new { @class = "chosen-select form-control" })
                   @Html.ValidationMessageFor(model => model.Fabric, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BuyerID, "Buyer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BuyerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BuyerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatternRefID, "Atc/Ref", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PatternRefID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PatternRefID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PatternStyleID, "Style", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PatternStyleID", null, htmlAttributes: new { @class = "chosen-select form-control" })
                @Html.ValidationMessageFor(model => model.PatternStyleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SampleTypeID, "Sample Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SampleTypeID", null, htmlAttributes: new { @class = "chosen-select form-control" })
                @Html.ValidationMessageFor(model => model.SampleTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SampleRequiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SampleRequiredDate, new { htmlAttributes = new { @class = "datepicker form-control" } })


                @Html.ValidationMessageFor(model => model.SampleRequiredDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SizeDetail,"Sizeset", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              <table>
                  <tr><td>Size</td>
<td>@Html.EditorFor(model => model.Size1, new { htmlAttributes = new { @class = "sizecolmn form-control" , style = "width:50px"  } })</td>
<td>@Html.EditorFor(model => model.Size2, new { htmlAttributes = new { @class = "sizecolmn form-control", style = "width:50px"  } })</td>
<td>@Html.EditorFor(model => model.Size3, new { htmlAttributes = new { @class = "sizecolmn form-control", style = "width:50px" }})</td>
<td>@Html.EditorFor(model => model.Size4, new { htmlAttributes = new { @class = "sizecolmn form-control", style = "width:50px"  } })</td>
<td>@Html.EditorFor(model => model.Size5, new { htmlAttributes = new { @class = "sizecolmn form-control", style = "width:50px"  } })</td>
 <td>@Html.EditorFor(model => model.Size6, new { htmlAttributes = new { @class = "sizecolmn form-control", style = "width:50px"  } })</td>
                  </tr>
                  <tr>
                      <td>Qty</td>
                      <td>@Html.EditorFor(model => model.Qty1, new { htmlAttributes = new { @class = "Qtycolmn form-control", style = "width:50px" } })

                      </td>

                      <td>@Html.EditorFor(model => model.Qty2, new { htmlAttributes = new { @class = "Qtycolmn form-control", style = "width:50px" } })</td>

                      <td>@Html.EditorFor(model => model.Qty3, new { htmlAttributes = new { @class = "Qtycolmn form-control", style = "width:50px" } })</td>

                      <td>@Html.EditorFor(model => model.Qty4, new { htmlAttributes = new { @class = "Qtycolmn form-control", style = "width:50px" } })</td>

                      <td>@Html.EditorFor(model => model.Qty5, new { htmlAttributes = new { @class = "Qtycolmn form-control", style = "width:50px" } })</td>

                      <td>@Html.EditorFor(model => model.Qty6, new { htmlAttributes = new { @class = "Qtycolmn form-control", style = "width:50px" } })</td>

              </table>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SizeDetail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SizeDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SizeDetail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsTeckPack, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsTeckPack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsTeckPack, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AddedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddedDate, new { htmlAttributes = new { @class = "form-control" , @Value = DateTime.Now.ToString(" dd/MMMM/yyyy HH:mm") } })


                @Html.ValidationMessageFor(model => model.AddedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
